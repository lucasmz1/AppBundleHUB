#!/bin/sh

OPWD="$PWD"
BASE="$(dirname "$(realpath "$0")")"
if [ "$OPWD" != "$BASE" ]; then
	echo "... $BASE is not the same as $PWD ..."
	echo "Going into $BASE and coming back here in a bit"
	cd "$BASE" || exit 1
fi
trap 'cd "$OPWD"' INT EXIT

#mkdir -p ./ArchLinux_localResources && cd ./ArchLinux_localResources

[ ! -f "rootfs.tgz" ] && [ -z "$NO_DOWNLOAD" ] && {
    wget "https://dl-cdn.alpinelinux.org/alpine/v3.20/releases/armv7/alpine-minirootfs-3.20.3-armv7.tar.gz" && {
		tar xvf "alpine-minirootfs-3.20.3-armv7.tar.gz" && cp /etc/resolv.conf ./alpine-minirootfs-3.20.3-armv7/etc/ && {
			mv "alpine-minirootfs-3.20.3-armv7.tar.gz" "rootfs.tgz"
			# ---
			if ! wget -qO "AppRun.rootfs" "https://github.com/xplshn/pelf/raw/refs/heads/pelf-ng/assets/AppRun.rootfs-based"; then
				error "Unable to download AppRun.rootfs-based and add it as ./AppRun.rootfs"
			fi
			# ---
			if ! wget -qO "AppRun.sharun" "https://github.com/xplshn/pelf/raw/refs/heads/pelf-ng/assets/AppRun.sharun"; then
				error "Unable to download AppRun.sharun and add it as ./AppRun.sharun"
			fi
			# ---
			if ! wget -qO "AppRun.sharun.ovfsProto" "https://github.com/xplshn/pelf/raw/refs/heads/pelf-ng/assets/AppRun.sharun.ovfsProto"; then
				error "Unable to download AppRun.sharun.proto and add it as ./AppRun.sharun.proto"
			fi
			# ---
			if ! wget -qO "bwrap" "https://github.com/lucasmz1/bubblewrap-musl-static/releases/download/4919017/bwrap-armhf"; then
				error "Unable to download bwrap and add it as ./bwrap"
			fi
			# ---
			if ! wget -qO "fuse-overlayfs" "https://github.com/containers/fuse-overlayfs/releases/download/v1.14/fuse-overlayfs-armv7l"; then
				error "Unable to download fuse-overlayfs and add it as ./fuse-overlayfs"
			fi
			# ---
			cat <<'EOF' >./pkgadd.sh && chmod +x ./pkgadd.sh # you can use ./pkgadd (single line, includes --Xbwrap command) for single-line installation procedures, or ./pkgadd.sh (always runs as uid 0, gid 0, within the container, its a sh script, can be multiline) for a more involved setup
#!/bin/sh
if [ "$AUR" = 1 ]; then
    yay -Sy --noconfirm $@ ; yay -Yc ; yay -Scc --noconfirm ; yay -Ps 
    yay -Ql $@
    pacman -Rcnsd base-devel --noconfirm
    pacman -Rcnsd perl --noconfirm
    pacman -Rcnsd python --noconfirm
    pacman -Scc --noconfirm ; yay -Scc --noconfirm

else
    pacman -Sy --noconfirm $@
    pacman -Ql $@
    pacman -Rcnsd base-devel --noconfirm
    pacman -Rcnsd perl --noconfirm
    pacman -Rcnsd python --noconfirm
    pacman -Scc --noconfirm
fi
# ArchLinux is stupid
touch /etc/localtime
mkdir -p /app/.disabled
touch /app/.disabled/SHARE_OPT
echo "070dbdbffc888abef97ae21766de319b" > /etc/machine-id
EOF
            		}
            	}
            }

export LOCAL_PATH="$PWD" && {
    cd "$OPWD"
} && "$@"
